name: Build, push & Deploy on Compute Engine

on:
  push:
    branches:
      - staging
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Even if you donâ€™t need to push updated code, you might still
      # need to check out the repository so that the Docker build has access to the Dockerfile, compose file, etc.
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: Aventior-Inc/driver-new-tech
          ref: staging

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          export_default_credentials: true     
      - name: Build Docker images
        run: |
          pwd
          ls -al
          # Create the .env file for Docker build configuration
          echo "HOST_NAME=${{ secrets.GCP_HOST_NAME }}" > .env
          echo "HOST_URL=${{ secrets.GCP_HOST_URL }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> .env
          echo "WINDSHAFT_FILES=${{ secrets.WINDSHAFT_FILES }}" >> .env
          echo "TIMEZONE=${{ secrets.TIMEZONE }}" >> .env
          echo "PROTOCOL=${{ secrets.PROTOCOL }}" >> .env
          echo "CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}" >> .env
          echo "STATIC_ROOT=${{ secrets.STATIC_ROOT }}" >> .env
          echo "DIST_ROOT=${{ secrets.DIST_ROOT }}" >> .env
          echo "DRIVER_REDIS_PORT=${{ secrets.DRIVER_REDIS_PORT }}" >> .env
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
          echo "DJANGO_IMAGE_TAG=driver-django-${{ github.run_number }}" >> .env
          echo "DATABASE_IMAGE_TAG=driver-database-${{ github.run_number }}" >> .env
          ls -al
          # If additional host configuration is required, run the script
          chmod +x production_host.sh
          ./production_host.sh
          # Build Docker images using Docker Compose
          docker-compose -f docker-compose.yml build
