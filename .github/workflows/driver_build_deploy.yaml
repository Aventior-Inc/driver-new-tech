name: CI/CD Pipeline

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: Aventior-Inc/driver-new-tech
          ref: staging
      
      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Create .env file for the Docker container
        run: |
          pwd
          ls -al
          echo "HOST_NAME=${{ secrets.HOST_NAME }}" > .env
          echo "HOST_URL=${{ secrets.HOST_URL }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "PGPASSWORD=${{ secrets.PGPASSWORD }}" >> .env
          echo "WINDSHAFT_FILES=${{ secrets.WINDSHAFT_FILES }}" >> .env
          echo "TIMEZONE=${{ secrets.TIMEZONE }}" >> .env
          echo "PROTOCOL=${{ secrets.PROTOCOL }}" >> .env
          echo "CONTAINER_NAME=${{ secrets.CONTAINER_NAME }}" >> .env
          echo "STATIC_ROOT=${{ secrets.STATIC_ROOT }}" >> .env
          echo "DIST_ROOT=${{ secrets.DIST_ROOT }}" >> .env
          echo "DRIVER_REDIS_PORT=${{ secrets.DRIVER_REDIS_PORT }}" >> .env
          echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
          echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
          echo "DJANGO_IMAGE_TAG=driver-django-${{ github.run_number }}" >> .env
          echo "DATABASE_IMAGE_TAG=driver-database-${{ github.run_number }}" >> .env
          echo "ECR_REPO=${{ secrets.ECR_REPO }}" >> .env
          ls -al
          # Give execute permission to production_host.sh
          chmod +x production_host.sh
          # Run the production_host.sh script
          ./production_host.sh
          docker build -t ${{ secrets.ECR_REPO }}:driver-django-${{ github.run_number }} .
          docker build -t ${{ secrets.ECR_REPO }}:driver-database-${{ github.run_number }} -f Dockerfile.database .

          # Log in to ECR
          ECR_REGISTRY=$(echo "${{ secrets.ECR_REPO }}" | cut -d '/' -f1)
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | docker login --username AWS --password-stdin $ECR_REGISTRY
          
          docker push ${{ secrets.ECR_REPO }}:driver-django-${{ github.run_number }}
          docker push ${{ secrets.ECR_REPO }}:driver-database-${{ github.run_number }}

